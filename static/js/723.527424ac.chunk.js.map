{"version":3,"file":"static/js/723.527424ac.chunk.js","mappings":"iNAgBA,MAhBA,SAAwBA,GAGnB,OAAOC,MAAM,mDAADC,OAAoDF,EAAS,uDAAAE,OAF1D,qCAGXC,MAAK,SAAAC,GACF,OAAIA,EAASC,GACFD,EAASE,OAGZC,QAAQC,OACZ,IAAIC,MAAM,wLAClB,IACHC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAM,GAEtC,E,SCJA,MATA,SAAoBG,GAAc,IAAXC,EAAMD,EAANC,OACnB,OACIC,EAAAA,EAAAA,KAAA,MAAAC,SACKF,EAAOG,KAAI,SAAAC,GACR,OAAOH,EAAAA,EAAAA,KAAA,MAAAC,SAAoBE,EAAMC,OAAjBD,EAAME,GAC1B,KAGZ,ECJMC,EAAa,CACfC,YAAa,GAoDjB,MAjDA,WAAmB,IAADC,EAEdC,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAAoCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA5CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAT,EAAAA,EAAAA,GAAAO,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BrC,EAAqC,QAA5BwB,EAAGc,EAAaE,IAAI,gBAAQ,IAAAhB,EAAAA,EAAI,GAqB/C,OAnBAiB,EAAAA,EAAAA,YAAU,WACNX,EAAe,IAEXG,GACAS,EAAe1C,GAAWG,MAAK,SAAAY,GAAM,OAAIe,EAAef,EAAO4B,QAAQ,IAE3ET,GAAc,EAElB,GAAG,CAAClC,EAAWiC,KAYXW,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA5B,SAAA,EACID,EAAAA,EAAAA,KAAA,SACI8B,MAAOxB,EACPyB,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,MAAOlD,EACPmD,SAjBc,SAACC,GACvB,IAAQF,EAAUE,EAAIC,OAAdH,MAER,GAAc,KAAVA,EACA,OAAQX,EAAgB,CAAC,GAE7BA,EAAgB,CAACe,MAAOJ,EAAMK,eAClC,KAcQvC,EAAAA,EAAAA,KAAA,UACI+B,KAAK,SACLS,QAAS,kBAAKtB,GAAc,EAAK,EAACjB,UAClCD,EAAAA,EAAAA,KAAA,QAAAC,SAAM,cAGVD,EAAAA,EAAAA,KAACyC,EAAW,CAAC1C,OAAQc,MAGjC,C","sources":["services/searchMovie_api.js","components/FoundMovies/FoundMovies.jsx","pages/Movies.jsx"],"sourcesContent":["function SearchMovieApi(nameMovie) {\n    const API_KEY = 'e90c4b52206cd75de7766fe2bd804e32';\n    \n     return fetch(`https://api.themoviedb.org/3/search/movie?query=${nameMovie}&include_adult=false&language=en-US&page=1&api_key=${API_KEY}`)\n        .then(response => {\n            if (response.ok) {\n                return response.json()\n            }\n                \n             return Promise.reject(\n                new Error('Детальної інформації не знайдено!!!'),)\n        })\n    .catch(error => console.log(error))\n              \n}\n\nexport default SearchMovieApi; \n\n\n\n","\nfunction FoundMovies({ movies }) {\n    return (\n        <ul>\n            {movies.map(movie => {\n                return <li key={movie.id}>{movie.title}</li>\n            })}\n       </ul>\n    )\n}\nexport default FoundMovies;\n\n","import { useEffect,useState } from 'react';\nimport { useSearchParams } from \"react-router-dom\";\nimport SearchMovieApi from 'services/searchMovie_api';\nimport FoundMovies from '../components/FoundMovies/FoundMovies'\n\nconst inputStyle = {\n    marginRight: 5,\n}\n\nfunction Movies() {\n    \n    const [foundMovies, setFoundMovies] = useState([])\n    const [showMovies, setShowMovies] = useState(false);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const nameMovie = searchParams.get('query') ?? '';\n\n    useEffect(() => {\n        setFoundMovies([]);\n\n        if (showMovies) {\n            SearchMovieApi(nameMovie).then(movies => setFoundMovies(movies.results));\n        }\n        setShowMovies(false);\n\n    }, [nameMovie, showMovies])\n    \n    const updateQueryString = (evt) => {\n        const { value } = evt.target;\n\n        if (value === '') {\n            return  setSearchParams({})\n        }\n        setSearchParams({query: value.toLowerCase()})\n    }\n    \n    return (\n        <>\n            <input\n                style={inputStyle}\n                type=\"text\"\n                autoComplete=\"off\"\n                autoFocus\n                value={nameMovie}\n                onChange={updateQueryString}\n            >\n            </input>\n    \n            <button\n                type=\"button\"\n                onClick={()=> setShowMovies(true)}>\n                <span>Search</span>\n            </button>\n\n            <FoundMovies movies={foundMovies} />\n        </>\n    )\n}\n\nexport default Movies;\n\n"],"names":["nameMovie","fetch","concat","then","response","ok","json","Promise","reject","Error","catch","error","console","log","_ref","movies","_jsx","children","map","movie","title","id","inputStyle","marginRight","_searchParams$get","_useState","useState","_useState2","_slicedToArray","foundMovies","setFoundMovies","_useState3","_useState4","showMovies","setShowMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","useEffect","SearchMovieApi","results","_jsxs","_Fragment","style","type","autoComplete","autoFocus","value","onChange","evt","target","query","toLowerCase","onClick","FoundMovies"],"sourceRoot":""}